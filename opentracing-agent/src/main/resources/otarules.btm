
# This rule is required to force loading of ByteMan rules when the Spring Boot classloader
# is first instantiated, before any of the application components have been loaded. Scanning
# the classloaders resources for OpenTracing agent rule files is far easier this way, then
# having to scan the nested jar files.

RULE Load OpenTracing agent rules via Spring Boot Classloader
CLASS org.springframework.boot.loader.LaunchedURLClassLoader
METHOD <init>
AT EXIT
IF TRUE
DO
  io.opentracing.contrib.agent.OpenTracingManager.loadRules($0);
ENDRULE


# This rule is required to bootstrap any ByteMan rules contained within a deployment (e.g. war)
# including in any nested jars.

# State 0 - module has not been scanned
# State 1 - module has been scanned

RULE Module getClassLoader
CLASS org.jboss.modules.Module
METHOD getClassLoader
HELPER io.opentracing.contrib.agent.OpenTracingHelper
AT EXIT
IF $0.getIdentifier().getName().startsWith("deployment.") && getState($0) == 0
DO
  System.out.println("*** MODULE getClassLoader module="+$0);
  io.opentracing.contrib.agent.OpenTracingManager.loadRules($!);
  setState($0, 1);
ENDRULE

